@model Teller.Web.ViewModels.Story.CommentViewModel

<div class="col-sm-12 comment-container" id="@(Model.Author)-@(Model.Id)-comment">
    <div class="well">
        <div class="row">
            <div class="col-sm-12">
                <div class="col-sm-10 pull-left" style="overflow-wrap: break-word;">
                    @Model.Content
                </div>
                <div class="col-sm-2 pull-right">
                    @if(User.Identity.IsAuthenticated && Model.Author != User.Identity.Name &&
                        !Model.AllLikes.Any(l => l.Author == User.Identity.Name))
                    {
                        <div class="row clearfix">
                            <div class="pull-right">
                                @Ajax.ActionLink(" ", "Like",
                                    new { Area = "", Controller = "CommentLike", id = Model.Id, like = false },
                                    new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = Model.Author + "-" + Model.Id + "-likes-container" },
                                    new { @class = "glyphicon glyphicon-thumbs-down btn btn-sm btn-default" })
                                @Ajax.ActionLink(" ", "Like",
                                    new { Area = "", Controller = "CommentLike", id = Model.Id, like = true },
                                    new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = Model.Author + "-" + Model.Id + "-likes-container" },
                                    new { @class = "glyphicon glyphicon-thumbs-up btn btn-sm btn-default" })
                            </div>
                        </div>
                        <p></p>
                    }
                    @if(!Model.IsFlagged && User.Identity.IsAuthenticated && User.Identity.Name != Model.Author)
                    {
                        <div class="row">
                            <div class="pull-right" id="flag-button-container">
                                @Ajax.ActionLink(" ", "Flag",
                                    new { Area = "", Controller = "StoryComments", id = Model.Id },
                                    new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = "flag-button-container" },
                                    new { @class = "glyphicon glyphicon-flag btn btn-sm btn-default" })
                            </div>
                        </div>
                    }
                    else if(User.Identity.Name == Model.Author)
                    {
                        <div class="row">
                            <div class="pull-right" id="delete-button-container">
                                @Ajax.ActionLink(" ", "Delete",
                                    new { Area = "", Controller = "StoryComments", id = Model.Id },
                                    new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = Model.Author + "-" + Model.Id + "-comment", OnComplete = "removeComment('#" + Model.Author + "-" + Model.Id + "-comment" + "')" },
                                    new { @class = "glyphicon glyphicon-remove btn btn-sm btn-default delete-comment-btn", alt = "Remove comment" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div id="@(Model.Author)-@(Model.Id)-likes-container">
                    <div class="pull-left col-sm-12">
                        @{
                            var likes = new Teller.Web.ViewModels.Like.LikeViewModel()
                            {
                                LikesCount = Model.LikesCount,
                                DislikesCount = Model.DislikesCount
                            };
                        }

                        @Html.Partial("_CommentLikes", likes)
                    </div>
                </div>
            </div>
            <div class="col-sm-3 text-center">
                <em>@Html.DisplayFor(m => Model.Published)</em>
            </div>
            <div class="col-sm-3 text-right">
                @Html.RouteLink(@Model.Author, new { Area = "User", Controller = "Info", Action = "Index", id = Model.Author })
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
