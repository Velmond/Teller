@model Teller.Web.ViewModels.Story.StoryCompleteViewModel
@{
    ViewBag.Title = "Story";
    var url = new Teller.Web.Infrastructure.UrlGenerator();
}

<div class="container">
    <div class="row">
        <div class="col-md-9">
            <div class="jumbotron">
                <h2 class="lead">
                    @Model.Title
                    @if(!Model.IsFlagged && User.Identity.IsAuthenticated && Model.Author != User.Identity.Name)
                    {
                        <small class="pull-right">
                            @Ajax.ActionLink(" ", "Flag", "Story",
                                new { Area = "", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                new AjaxOptions() { HttpMethod = "Post" },
                                new { @class = "glyphicon glyphicon-flag btn btn-sm btn-default flag-story-btn" })
                        </small>
                    }
                    else if(Model.Author == User.Identity.Name)
                    {
                        <small class="pull-right">
                            @Html.ActionLink(" ", "Edit", "Story",
                                new { Area = "", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                new { @class = "glyphicon glyphicon-edit btn btn-sm btn-default" })
                            @Html.ActionLink(" ", "Delete", "Story",
                                new { Area = "", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                new { @class = "glyphicon glyphicon-remove btn btn-sm btn-default" })
                        </small>
                    }
                </h2>
            </div>

            <div class="well">
                <div class="row">
                    <div class="col-md-12">
                        <p>@Html.Raw(Model.Content)</p>
                    </div>
                </div>
            </div>

            @if(Model.Comments.Count() > 0 || User.Identity.IsAuthenticated)
            {
                <div class="well">
                    <div class="row">
                        @if(User.Identity.IsAuthenticated)
                        {
                            var postComment = new Teller.Web.Models.PostComment() { StoryId = Model.Id, CommentContent = "" };
                            @Html.Partial("_StoryCommentForm", postComment)
                        }
                    </div>

                    <div id="comments-container" class="row">
                        @foreach(var comment in Model.Comments)
                        {
                            @Html.Partial("_CommentPartial", comment)
                        }
                    </div>
                </div>
            }
        </div>
        <div class="col-md-3">
            <div class="well">
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <img src="@Model.PicturePath" alt="@Model.Title" class="img-responsive img-thumbnail" />
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <strong>Genre:</strong> <em>@Model.Genre</em>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <strong>Author:</strong> <em>@Html.RouteLink(Model.Author, new { Area = "User", Controller = "Story", Action = "Index", id = Model.Author })</em>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <strong>Series: </strong>
                            @if(Model.Series != null)
                            {
                                <em>@Html.RouteLink(Model.Series.Title, new { Area = "", Controller = "Series", Action = "Index", id = url.GenerateUrlId(Model.Series.Id, Model.Series.Title) })</em>
                            }
                            else
                            {
                                <em>none</em>
                            }
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <strong>Published on:</strong> <em>@Html.DisplayFor(m => Model.DatePublished)</em>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <strong>Favorited by:</strong> <em>@Model.FavouritedByCount users</em>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p>
                            <strong>Seen:</strong> <em>@Model.ViewsCount times</em>
                        </p>
                    </div>
                </div>
                <div id="likes-container">
                    <div class="row">
                        <p>
                            @if(User.Identity.IsAuthenticated && !Model.UserHasLiked && Model.Author != User.Identity.Name)
                            {
                                <div class="col-md-6">
                                    @Ajax.ActionLink(" ", "Like",
                                        new { Area = "", Controller = "StoryLike", id = url.GenerateUrlId(Model.Id, Model.Title), like = false },
                                        new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "likes-container" },
                                        new { @class = "glyphicon glyphicon-thumbs-down btn btn-sm btn-danger btn-block" })
                                </div>
                                <div class="col-md-6">
                                    @Ajax.ActionLink(" ", "Like",
                                        new { Area = "", Controller = "StoryLike", id = url.GenerateUrlId(Model.Id, Model.Title), like = true },
                                        new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "likes-container" },
                                        new { @class = "glyphicon glyphicon-thumbs-up btn btn-sm btn-success btn-block" })
                                </div>
                            }
                        </p>
                    </div>

                    @{
                        int numbedOfLikes = (Model.LikesCount + Model.DislikesCount == 0 ? 1 : Model.LikesCount + Model.DislikesCount);
                        var likes = new Teller.Web.ViewModels.Like.StoryLikeViewModel()
                        {
                            LikesCount = Model.LikesCount,
                            DislikesCount = Model.DislikesCount,
                            LikesPersentage = ((double)Model.LikesCount / numbedOfLikes * 100)
                        };
                    }

                    @Html.Partial("_StoryLikes", likes)
                </div>
                <div class="row">
                    @if(User.Identity.IsAuthenticated && Model.Author != User.Identity.Name)
                    {
                        <div class="col-md-12">
                            @Ajax.ActionLink(" Favorite", "Favorite",
                                new { Area = "", Controller = "Story", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                new AjaxOptions() { HttpMethod = "Post" },
                                new { @class = "glyphicon glyphicon-heart-empty btn btn-sm btn-default btn-block" })
                        </div>
                        <div class="col-md-12">
                            @Ajax.ActionLink(" Save", "ReadLater",
                                new { Area = "", Controller = "Story", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                new AjaxOptions() { HttpMethod = "Post" },
                                new { @class = "glyphicon glyphicon-book btn btn-sm btn-default btn-block" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    @Scripts.Render("~/bundles/jqueryval");
    <script type="text/javascript">
        $(function () {
            $('.flag-story-btn').click(function () {
                $(this).remove();
            });
        });

        function removeContent() {
            $('#new-comment-content-container').val('');
        }

        function removeComment(id) {
            $(id).remove();
        }
    </script>
}
