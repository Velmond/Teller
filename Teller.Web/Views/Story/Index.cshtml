@model Teller.Web.ViewModels.Story.StoryCompleteViewModel
@{
    ViewBag.Title = "Story";
}
@{var url = new Teller.Web.Helpers.UrlGenerator();}

<div class="container">
    <div class="row">
        <div class="col-md-9">
            <div class="jumbotron">
                <h2 class="lead">
                    @Model.Title
                    @if(!Model.IsFlagged && User.Identity.IsAuthenticated)
                    {
                        <small class="pull-right">
                            @Ajax.ActionLink("Flag", "Flag", "Story",
                                new { Area = "", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                new AjaxOptions() { HttpMethod = "Post" },
                                new { @class = "btn btn-sm btn-default" })
                        </small>
                    }
                </h2>
            </div>

            <div class="well">
                <div class="row">
                    <div class="col-md-12">
                        <p>@Html.Raw(Model.Content)</p>
                    </div>
                </div>
            </div>

            @if(Model.Comments.Count() > 0 || User.Identity.IsAuthenticated)
            {
                <div class="well">
                    @if(User.Identity.IsAuthenticated)
                    {
                        <div class="row">
                            <div class="col-md-12">
                                @Html.ValidationSummary()
                            </div>
                            <div class="col-md-12">
                                @using(Ajax.BeginForm("PostComment",
                                new { Area = "", Controller = "Story", Action = "PostComment" },
                                new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.InsertBefore, UpdateTargetId = "comments-container" },
                                new { @class = "form-horizontal col-md-12" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("StoryId", Model.Id)
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.TextArea("CommentContent", new { @class = "form-control", style = "max-width: 100%" })
                                            <span class="input-group-btn">
                                                <input type="submit" value="Comment" class="btn btn-default pull-right" style="height: 100%" />
                                            </span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    <div id="comments-container" class="row">
                        @foreach(var comment in Model.Comments)
                        {
                            @Html.Partial("_CommentPartial", comment)
                        }
                    </div>
                </div>
            }
            
        </div>
        <div class="col-md-3">
            <div class="well">
                <div class="row">
                    <div class="col-md-12">
                        <img src="@Model.PicturePath" alt="@Model.Title" class="img-responsive img-thumbnail" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <strong>Genre:</strong> @Model.Genre
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <strong>Author:</strong> @Html.RouteLink(Model.Author, new { Area = "User", Controller = "UserStories", Action = "Index", id = Model.Author })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <strong>Published on:</strong> @Html.DisplayFor(m => Model.DatePublished)
                    </div>
                </div>
                <div id="likesCount" class="row">
                    <div class="col-md-12">
                        <strong>Likes/Dislikes: </strong>@Model.LikesCount / @Model.DislikesCount
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="progress">
                            @{int numbedOfLikes = (Model.LikesCount + Model.DislikesCount == 0 ? 1 : Model.LikesCount + Model.DislikesCount); }
                            <div class="progress-bar" style="width: @(Math.Min(Model.LikesCount / numbedOfLikes, 0))%;"></div>
                        </div>
                        @if(User.Identity.IsAuthenticated)
                        {
                            <div class="row">
                                @using(Ajax.BeginForm("Like",
                                    new { Area = "", Controller = "Stories", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                    new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "Post", UpdateTargetId = "likesCount" },
                                    new { @class = "col-md-6" }))
                                {
                                    <input type="hidden" name="likeValue" value="false" />
                                    <input type="submit" value="Dislike" class="btn btn-sm btn-danger btn-block" />
                                }

                                @using(Ajax.BeginForm("Like",
                                    new { Area = "", Controller = "Stories", id = url.GenerateUrlId(Model.Id, Model.Title) },
                                    new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "Post", UpdateTargetId = "likesCount" },
                                    new { @class = "col-md-6" }))
                                {
                                    <input type="hidden" name="likeValue" value="true" />
                                    <input type="submit" value="Like" class="btn btn-sm btn-success btn-block" />
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        Favored by <strong>@Model.FavouritedByCount</strong> users
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        Seen by <strong>@Model.ViewsCount</strong> users
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <strong>Series: </strong>
                        @if(Model.Series != null)
                        {
                            <em>
                                @Html.RouteLink(Model.Series.Title, new { Area = "", Controller = "Series", Action = "Index", id = url.GenerateUrlId(Model.Series.Id, Model.Series.Title) })
                            </em>
                        }
                        else
                        {
                            <em>none</em>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    @Scripts.Render("~/bundle/jqueryval");
}
